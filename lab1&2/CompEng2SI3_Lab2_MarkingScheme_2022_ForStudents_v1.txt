***********************************************************************
For Lab2, The total of 45 marks are distributed as follows:

1) 35 marks for correctness of the code - based on student's demo and TA's additional testing, as follows:
i) addition (negative integer) and subtraction (positive and negative) : 15 marks
ii) compareTo : 5 marks
iii) multiplication : 15 marks

2) 10 marks for answering questions about the implementation.


*************************************************************************
Notes:
1)	Leading zero should be deducted 1 mark, negative zero should be also deducted 1 mark in Lab2
	for example:99999-99998 = 00001 (deduct 1 mark), answer should be 99999-99998 = 1
				-99999+99999 = -0  or -99999 * 0 = -0 (deduct 1 mark), answer should be -99999+99999 = 0, -99999 * 0 =0
2)	For multiply, some students just use the add() to add the HugeInteger many times. And we cannot test this implementation for big number, as it costs too much time. We should remind students not to implement multiply like this.
3)	Students do NOT need to demo the runtime to TA during Lab2.


***************************************************************************
For bonus, the total 20 marks are distributed as follows:

Implementation:
10 marks, during Lab2 demo. If students do not demo thier code in Lab2, they cannot get this implementation bonus marks.

report:
10 marks, explain the algorithm and analytical justification of the runtime in the report. Students who did not demo their bonus code in Lab 2 still can get this report bonus. 

To get the full bonus, students MUST explain everything in detail. Otherwise, only partial bonus marks will be awarded.

Unless they devise their own sub-quadratic multiplication algorithm, they should provide a citation to an appropriate reference for the technique used.  
If there is no citation, the maximum bonus mark is 15.

****************************************************************************

For report, the total 25 marks are distributed as follows:

5 marks: Description of data structures and algorithms (1 mark for data structure, 1 mark for each operation)

5 marks: Theoretical analysis of running time and memory requirement (1 mark for the amount of memory to store a huge integer; 1 mark for run-time and extra memory for each operation)

3 marks: Test procedure (test class and discussion in the report) (0.5 mark for each method, 1 mark constructors)

10 marks: Experimental measurements, comparison and discussion (2 mark for documenting the measurement method and providing parameters; 2 mark for results for each operation)

2 mark: Discussion of results and comparison


****************************************************************************
How to use the TestHugeInteger for Lab2:
1. Change the code: string demoLab = "Lab2";
2. It's better to comment out the debug message of your own HugeInteger before the test.
3. If the test takes too long time, you can change the values of the variables defined in the code:
    // iterate the MAX_SIZE_ARRAY MAX_RUN times
    unsigned int max_run = 50;
    // different size for test
    vector<int> max_size_array = {1,20,50,500,5000};